# scanner/services/vulnerability_analysis.py
import requests
import pandas as pd
import matplotlib.pyplot as plt

def fetch_cve_data():
    url = 'https://services.nvd.nist.gov/rest/json/cves/1.0'
    response = requests.get(url)
    try:
        data = response.json()
    except requests.exceptions.JSONDecodeError:
        data = None
    return data

def analyze_vulnerabilities(services):
    vulnerabilities = []
    cve_data = fetch_cve_data()
    if not cve_data or 'result' not in cve_data:
        return vulnerabilities

    for service in services:
        for cve in cve_data['result']['CVE_Items']:
            if service['name'] in cve['cve']['affects']['vendor']['vendor_data'][0]['product']['product_data'][0]['product_name']:
                vulnerability = {
                    'service': service,
                    'cve_id': cve['cve']['CVE_data_meta']['ID'],
                    'description': cve['cve']['description']['description_data'][0]['value'],
                    'severity': cve['impact']['baseMetricV3']['cvssV3']['baseSeverity'],
                    'recommendation': 'Update to the latest version'
                }
                vulnerabilities.append(vulnerability)
    return vulnerabilities

def generate_report(vulnerabilities):
    df = pd.DataFrame(vulnerabilities)
    severity_counts = df['severity'].value_counts()
    severity_counts.plot(kind='bar')
    plt.title('Vulnerability Severity Counts')
    plt.xlabel('Severity')
    plt.ylabel('Count')
    plt.savefig('vulnerability_report.png')
